{"version":3,"sources":["LoginRegister.module.css","Main.module.css","Home.module.css","Home.js","Compete.js","Login.js","Register.js","Leaderboard.js","NotFoundPage.js","Main.js","index.js"],"names":["module","exports","initialState","inputValue","movie","result","Home","keypress","event","key","keyCode","charCode","indexOf","state","loadRandomMovie","guessRating","selectGenre","genre","target","value","genreList","includes","setState","selectedGenre","getGenres","onChange","map","getGuessIfGuessed","context","className","styles","guess","evaluateGuess","ratingGuess","realRating","toFixed","newMovie","onClick","guessInput","type","id","step","min","max","autoFocus","e","updateInputValue","submit","fetch","then","response","json","data","parseFloat","isNaN","Error","undefined","method","headers","body","JSON","stringify","imdbID","document","addEventListener","this","evt","container","poster","Poster","src","alt","info","title","Title","Year","movieInfo","Released","Genre","Country","Runtime","plot","Plot","error","competition","results","guessResult","Component","resetState","Compete","props","loadNextMovie","checkLoginStatus","credentials","loggedIn","status","getCompetition","finished","movies","guessed","ratedGuess","newCompetition","new","addToLeaderboard","addedToLeaderboard","history","push","getAddToToLeaderboardButton","redButton","loginStatus","guessedMovies","currentResult","Login","attemptLogin","updateUsername","username","updatePassword","password","htmlFor","register","to","Register","attemptRegister","updateConfirmPassword","confirmPassword","Leaderboard","leaderboard","position","obj","NotFoundPage","notFound","Main","logout","window","location","reload","renderOnLogin","ul","right","header","content","exact","path","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.386e81a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"LoginRegister_Login__1Xgbk\",\"register\":\"LoginRegister_register__SnuVs\",\"error\":\"LoginRegister_error__3E2Hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__TWBlU\",\"header\":\"Main_header__2Qx-5\",\"right\":\"Main_right__3c5VA\",\"content\":\"Main_content__2Lmgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__jw9yQ\",\"container\":\"Home_container__1WTXh\",\"poster\":\"Home_poster__2OxXc\",\"info\":\"Home_info__4RHRY\",\"title\":\"Home_title__xOUz-\",\"plot\":\"Home_plot__YuxtV\",\"movieInfo\":\"Home_movieInfo__1sDQl\",\"guessInput\":\"Home_guessInput__uPI6V\",\"submit\":\"Home_submit__2FMHO\",\"guess\":\"Home_guess__1guw8\",\"newMovie\":\"Home_newMovie__2WWbC\",\"competition\":\"Home_competition__1Xphq\",\"redButton\":\"Home_redButton__3Brsd\",\"notFound\":\"Home_notFound__3-MlC\",\"error\":\"Home_error__8SDTz\"};","import React, { Component } from \"react\";\nimport styles from './Home.module.css';\n \nconst initialState = {\n    inputValue: \"\",\n    movie: null,\n    result: null\n};\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.genreList = ['Any', 'Action', 'Adult', 'Adventure', 'Animation', 'Biography', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Film-Noir', 'Game-Show', 'History', 'Horror', 'Music', 'Musical', 'Mystery', 'News', 'Reality-TV', 'Romance', 'Sci-Fi', 'Short', 'Sport', 'Talk-Show', 'Thriller', 'War', 'Western'];\n\n        this.state = initialState;\n        document.body.addEventListener('keyup', this.keypress);\n    }   \n\n    componentDidMount() {\n        this.loadRandomMovie();\n    }\n\n    keypress = (event) => {\n        var key = event.keyCode || event.charCode || 0;\n        if ([13].indexOf(key) !== -1) {\n            if (this.state.result) {\n                this.loadRandomMovie();\n            } else {\n                this.guessRating();\n            }\n        }\n    };\n\n    updateInputValue(evt) {\n        this.setState({\n          inputValue: evt.target.value\n        });\n    }\n\n    selectGenre = (event) => {\n        let genre = event.target.value;\n\n        if (this.genreList.includes(genre)) {\n            this.setState({ selectedGenre: genre }, () => {\n                this.loadRandomMovie();\n            });\n        }\n    }\n\n    getGenres = () => {\n        return (<select onChange={this.selectGenre} value={this.state.selectedGenre}>\n            {this.genreList.map(genre => <option key={genre} value={genre}>{genre}</option>)}\n        </select>)\n    }\n\n    getGuessIfGuessed = () => {\n        let context = this.state.result;\n\n        if (context) {\n            return (\n                <div className={styles.guess}>\n                    <div>\n                        <div>Result: {Home.evaluateGuess(context)}</div>\n                        <div>Your guess: {context.ratingGuess}/10</div>\n                        <div>Rating: {context.realRating.toFixed(1)}/10</div>\n                    </div>\n                    <button className={styles.newMovie} onClick={this.loadRandomMovie}>Try Other Movie</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.guessInput}>\n                    <h4>Guess rating: </h4>\n                    <div>\n                        <div>\n                            <input type=\"number\" id=\"guess\" step=\"0.1\" min=\"0\" max=\"10\" autoFocus value={this.state.inputValue} onChange={e => this.updateInputValue(e)}></input>\n                            <span>/10</span>\n                        </div>\n                        <button className={styles.submit} onClick={this.guessRating}>Submit</button>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    loadRandomMovie = () => {\n        this.setState(initialState);\n        // fetch(`http://localhost:3000/api/movie?id=tt0317219`, {\n        //     credentials: 'include'\n        // }).then(response => {\n        fetch(`http://localhost:3000/api/random-movie${(this.state.selectedGenre !== 'Any' && this.genreList.includes(this.state.selectedGenre)) ? '?genre=' + this.state.selectedGenre : ''}`)\n        .then(response => {\n            response.json().then(data => {\n                this.setState({movie: data});\n            });\n        });\n    };\n\n    guessRating = () => {\n        let guess = parseFloat(this.state.inputValue);\n        guess = guess.toFixed(1);\n\n        if (!isNaN(guess) && guess <= 10 && guess >= 0) {\n            this.setState({ Error: undefined });\n            fetch(`http://localhost:3000/api/guess-rating`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ guess: guess, imdbID: this.state.movie.imdbID })\n            }).then(response => {\n                return response.json();\n            }).then(data => {\n                this.setState({result: data});\n            });\n        } else {\n            this.setState({ Error: 'Guess must be between 0 and 10' });\n        }\n    };\n\n    render() {\n        if (this.state.movie) {\n            return (\n                <div className={styles.container}>\n                    <div className={styles.Home}>\n                        <object className={styles.poster} data={this.state.movie.Poster !== 'N/A' ? this.state.movie.Poster : null}>\n                            <img src=\"http://localhost:3000/no-poster.jpg\" alt=\"No poster\"></img>\n                        </object>\n                        <div className={styles.info}>\n                            <div>\n                                <h2 className={styles.title}>{this.state.movie.Title} ({this.state.movie.Year})</h2>\n                                <div className={styles.movieInfo}>\n                                    <h4>Released: {this.state.movie.Released !== 'N/A' ? this.state.movie.Released : this.state.movie.Year}</h4>\n                                    <h4>Genre: {this.state.movie.Genre}</h4>\n                                    <h4>Country: {this.state.movie.Country}</h4>\n                                    <h4>Runtime: {this.state.movie.Runtime}</h4>\n                                    <h4>Summary:</h4>\n                                </div>\n                                <p className={styles.plot}>{this.state.movie.Plot}</p>\n                            </div>\n                            {this.getGuessIfGuessed()}\n                        </div>\n                    </div>\n                    {this.state.Error ? <div className={styles.error}>{this.state.Error}</div> : null}\n                    <div className={styles.competition}>\n                        <div>\n                            <h4>Select genre</h4>\n                            {this.getGenres()}\n                        </div>\n                    </div>  \n                </div>\n            );\n        }\n        \n        return (<div></div>);\n    }\n\n    static evaluateGuess(results) {\n        let guessResult = results.result;\n\n        if (guessResult === 10) {\n            return 'Perfect';\n        } else if (guessResult >= 9.7) {\n            return 'Close';\n        } else if (guessResult >= 9) {\n            return 'Good';\n        } else if (guessResult >= 8) {\n            return 'OK';\n        } else if (guessResult >= 7) {\n            return 'Bad';\n        } else {\n            return 'Really bad';\n        }\n    }\n}\n \nexport default Home;","import React, { Component } from \"react\";\nimport styles from './Home.module.css';\n \nconst initialState = {\n    inputValue: '',\n    competition: null,\n    movie: null,\n    result: null\n};\n\nconst resetState = {\n    inputValue: '',\n    movie: null,\n    result: null\n}\n\nclass Compete extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...initialState,\n            loggedIn: props.loginStatus};\n\n        document.body.addEventListener('keyup', this.keypress);\n    }   \n\n    componentDidMount() {\n        if (this.state.loggedIn) {\n            this.getCompetition().then(() => this.loadNextMovie());\n        } else {\n            this.checkLoginStatus().then(() => {\n                if (this.state.loggedIn) {\n                    this.getCompetition().then(() => this.loadNextMovie()); \n                } else {\n                    this.props.history.push('/');\n                }\n            });\n        }\n    }\n\n    keypress = (event) => {\n        var key = event.keyCode || event.charCode || 0;\n        if ([13].indexOf(key) !== -1) {\n            if (this.state.result) {\n                this.loadNextMovie();\n            } else {\n                this.guessRating();\n            }\n        }\n    }\n\n    checkLoginStatus = () => {\n        return fetch('http://localhost:3000/auth/logged-in', { credentials: 'include' }).then(response => {\n          this.setState({ loggedIn: response.status === 200 });\n        })\n      }\n\n    getCompetition = () => {\n        return fetch('http://localhost:3000/api/compete', { \n            method: 'POST',\n            credentials: 'include' })\n        .then(response => {\n            return response.json();\n        })\n        .then(data => {\n            this.setState({ competition: data });\n        })\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n          inputValue: evt.target.value\n        });\n    }\n\n    getGuessIfGuessed = () => {\n        let context = this.state.result;\n\n        if (context) {\n            return (\n                <div className={styles.guess}>\n                    <div>\n                        <div>Result: {Compete.evaluateGuess(context)}</div>\n                        <div>Your guess: {context.ratingGuess}/10</div>\n                        <div>Rating: {context.realRating.toFixed(1)}/10</div>\n                    </div>\n                    {!this.state.competition.finished ? <button className={styles.newMovie} onClick={this.loadNextMovie}>Next movie</button> : null}\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.guessInput}>\n                    <h4>Guess rating: </h4>\n                    <div>\n                        <div>\n                            <input type=\"number\" id=\"guess\" step=\"0.1\" min=\"0\" max=\"10\" autoFocus value={this.state.inputValue} onChange={e => this.updateInputValue(e)}></input>\n                            <span>/10</span>\n                        </div>\n                        <button className={styles.submit} onClick={this.guessRating}>Submit</button>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    loadNextMovie = () => {\n        this.setState(resetState);\n        let competition = this.state.competition;\n        let imdbID = null;\n\n        for (let movie of competition.movies) {\n            if (!movie.guessed) {\n                imdbID = movie.imdbID;\n                break;\n            }\n        }\n\n        if (!imdbID) {\n            imdbID = competition.movies[9].imdbID;\n\n            fetch(`http://localhost:3000/api/movie?id=${imdbID}`, {\n                credentials: 'include'\n            }).then(response => {\n                return response.json();\n            }).then(data => {\n                this.setState({ movie: data, result: competition.movies[9].guess });\n            });\n        } else {\n            fetch(`http://localhost:3000/api/movie?id=${imdbID}`, {\n            credentials: 'include'\n            }).then(response => {\n                return response.json();\n            }).then(data => {\n                this.setState({ movie: data });\n            });\n        }\n    };\n\n    guessRating = () => {\n        let guess = parseFloat(this.state.inputValue);\n        guess = guess.toFixed(1);\n\n        if (!isNaN(guess) && guess <= 10 && guess >= 0) {\n            this.setState({ Error: undefined });\n            fetch(`http://localhost:3000/api/compete-guess`, {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ guess: guess, imdbID: this.state.movie.imdbID })\n            }).then(response => {\n                return response.json()\n            }).then(data => {\n                this.setState({ result: data.ratedGuess,\n                                competition: data.competition });\n            });\n        } else {\n            this.setState({ Error: 'Guess must be between 0 and 10' });\n        }\n    };\n\n    newCompetition = () => {\n        this.setState({ Error: undefined });\n        return fetch('http://localhost:3000/api/compete', { \n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({ new: true })})\n        .then(response => {\n            return response.json();\n        })\n        .then(data => {\n            this.setState({ competition: data });\n            this.loadNextMovie();\n        })\n    }\n\n    addToLeaderboard = () => {\n        let competition = this.state.competition;\n        if (!this.state.competition.addedToLeaderboard) {\n            return fetch('http://localhost:3000/api/add-to-leaderboard', { \n                method: 'POST',\n                credentials: 'include'\n            }).then(response => {\n                competition.addedToLeaderboard = true;\n                this.setState(competition);\n                \n                this.props.history.push('/leaderboard');\n            });\n        } else {\n            this.setState({ Error: 'Already added to leaderboard' });\n        }\n    }\n\n    getAddToToLeaderboardButton = () => {\n        if (this.state.competition.finished) {\n            return (<button className={styles.redButton} onClick={this.addToLeaderboard}>Add to leaderboard</button>);\n        }\n    }\n\n    render() {\n        if (!this.state.loggedIn) {\n            return <div>\n                Make an account to compete\n            </div>\n        }\n        if (this.state.movie) {\n            return (\n                <div className={styles.container}>\n                    <div className={styles.Home}>\n                        <object className={styles.poster} data={this.state.movie.Poster !== 'N/A' ? this.state.movie.Poster : null}>\n                            <img src=\"http://localhost:3000/no-poster.jpg\" alt=\"No poster\"></img>\n                        </object>\n                        <div className={styles.info}>\n                            <div>\n                                <h2 className={styles.title}>{this.state.movie.Title} ({this.state.movie.Year})</h2>\n                                <div className={styles.movieInfo}>\n                                    <h4>Released: {this.state.movie.Released !== 'N/A' ? this.state.movie.Released : this.state.movie.Year}</h4>\n                                    <h4>Genre: {this.state.movie.Genre}</h4>\n                                    <h4>Country: {this.state.movie.Country}</h4>\n                                    <h4>Runtime: {this.state.movie.Runtime}</h4>\n                                    <h4>Summary:</h4>\n                                </div>\n                                <p className={styles.plot}>{this.state.movie.Plot}</p>\n                            </div>\n                            {this.getGuessIfGuessed()}\n                        </div>\n                    </div>\n                    {this.state.Error ? <div className={styles.error}>{this.state.Error}</div> : null}\n                    <div className={styles.competition}>\n                        <div>\n                            <h4>Competition stats</h4>\n                            <div>Movies guessed: {this.state.competition.guessedMovies}/10</div>\n                            <div>Current result: {this.state.competition.currentResult}/10</div>\n                            <button className={styles.redButton} onClick={this.newCompetition}>New competition</button>\n                            {this.getAddToToLeaderboardButton()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        \n        return (<div></div>);\n    }\n\n    static evaluateGuess(results) {\n        let guessResult = results.result;\n\n        if (guessResult === 10) {\n            return 'Perfect';\n        } else if (guessResult >= 9.7) {\n            return 'Close';\n        } else if (guessResult >= 9) {\n            return 'Good';\n        } else if (guessResult >= 8) {\n            return 'OK';\n        } else if (guessResult >= 7) {\n            return 'Bad';\n        } else {\n            return 'Really bad';\n        }\n    }\n}\n \nexport default Compete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './LoginRegister.module.css';\n \nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            loggedIn: props.loginStatus\n        };\n    }\n  \n    attemptLogin = () => {\n        if (this.state.loggedIn) {\n            this.setState({ Error: 'Already logged in' });\n        } else {\n            fetch('http://localhost:3000/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify(this.state)\n            }).then(response => {\n                if (response.status !== 200) {\n                    return response.json();\n                } else {\n                    this.props.checkLoginStatus();\n                    this.props.history.push('/');\n                }\n            }).then(data => {\n                if (data) {\n                    this.setState(data);\n                }\n            });\n        }\n    }\n\n    updateUsername = (event) => {\n        this.setState({ username: event.target.value });\n    }\n\n    updatePassword = (event) => {\n        this.setState({ password: event.target.value });\n    }\n\n    render() {\n        if (this.state.loggedIn) {\n            this.props.history.push('/');\n        }\n\n        return (\n            <div className={styles.Login}>\n                <form>\n                    <h2>Login</h2>\n\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" onChange={e => this.updateUsername(e)}></input>\n                    \n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" onChange={e => this.updatePassword(e)}></input>\n\n                    {this.state.Error ? <div className={styles.error}>{this.state.Error}</div> : null}\n\n                    <button onClick={this.attemptLogin}>Sign in</button>\n\n                    <div id={styles.register}>Not registered? <Link to=\"register\">Create an account</Link></div>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './LoginRegister.module.css';\n \nclass Register extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            loggedIn: this.props.loginStatus\n        };\n    }\n  \n    attemptRegister = () => {\n        fetch('http://localhost:3000/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(this.state)\n            }).then(response => {\n                if (response.status !== 200) {\n                    return response.json();\n                } else {\n                    this.props.history.push('/login');\n                }\n            }).then(data => {\n                if (data) {\n                    this.setState(data);\n                }\n            });\n    }\n\n    updateUsername = (event) => {\n        this.setState({ username: event.target.value });\n    }\n\n    updatePassword = (event) => {\n        this.setState({ password: event.target.value });\n    }\n\n    updateConfirmPassword = (event) => {\n        this.setState({ confirmPassword: event.target.value });\n    }\n\n    render() {\n        if (this.state.loggedIn) {\n            this.props.history.push('/');\n        }\n\n        return (\n            <div className={styles.Login}>\n                <form>\n                    <h2>Register</h2>\n\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" onChange={e => this.updateUsername(e)}></input>\n                    \n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" onChange={e => this.updatePassword(e)}></input>\n\n                    <label htmlFor=\"confirm_password\">Confirm Password</label>\n                    <input id=\"confirm_password\" type=\"password\" onChange={e => this.updateConfirmPassword(e)}></input>\n\n                    {this.state.Error ? <div className={styles.error}>{this.state.Error}</div> : null}\n\n                    <button onClick={this.attemptRegister}>Sign up</button>\n\n                    <div id={styles.register}>Already registered? <Link to=\"login\">Sign in</Link></div>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Register;","import React, { Component } from \"react\";\nimport styles from './Leaderboard.module.css';\n \nclass Leaderboard extends Component {  \n    constructor() {\n        super();\n        this.state = { leaderboard: [] };\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/api/leaderboard')\n        .then(response => response.json())\n        .then(data => {\n            this.setState({ leaderboard: data });\n        })\n    }\n\n    render() {\n        let position = 1;\n\n        if (this.state.leaderboard) {\n            return (<ol className={styles.leaderboard}>\n                <div key='header'>\n                    <div>Position</div>\n                    <div>Username</div>\n                    <div>Result</div>\n                </div>\n                {this.state.leaderboard.map(obj => <li key={\"pos\" + position}>\n                    <div>{position++}</div>\n                    <div>{obj.username}</div>\n                    <div>{obj.result}</div>\n                </li>)}\n            </ol>);\n        } \n\n        return (<div></div>);\n    }\n}\n \nexport default Leaderboard;","import React, { Component } from \"react\";\nimport styles from './Home.module.css';\n \nclass NotFoundPage extends Component {  \n    render() {\n        return (<div className={styles.notFound}>\n            404 Not Found\n        </div>);\n    }\n}\n \nexport default NotFoundPage;","import React, { Component } from \"react\";\nimport {\n  Route,\n  NavLink,\n  HashRouter,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Compete from \"./Compete\";\nimport Login from \"./Login\";\nimport Register from \"./Register\"\nimport styles from './Main.module.css';\nimport Leaderboard from \"./Leaderboard\";\nimport NotFoundPage from \"./NotFoundPage\";\n \nclass Main extends Component {\n    constructor() {\n      super();\n      this.state = {};\n    }\n\n    logout = () => {\n        return fetch('http://localhost:3000/auth/logout', { credentials: 'include' }).then(response => {\n          window.location.reload();\n        });\n    }\n\n    checkLoginStatus = () => {\n      return fetch('http://localhost:3000/auth/logged-in', { credentials: 'include' }).then(response => {\n        this.setState({ loggedIn: response.status === 200 });\n      })\n    }\n\n    componentDidMount() {\n        this.checkLoginStatus();\n    }\n\n    renderOnLogin = () => {\n      if (this.state.loggedIn) {\n        return <ul className={styles.ul}>\n            <li key='/'><NavLink to=\"/\">Home</NavLink></li>\n            <li key='/compete'><NavLink to=\"/compete\">Compete</NavLink></li>\n            <li key='/leaderboard'><NavLink to=\"/leaderboard\">Leaderboard</NavLink></li>\n\n            <li className={styles.right}><button onClick={this.logout}>Sign out</button></li>\n        </ul>;\n      } else {\n        return <ul className={styles.ul}>\n            <li key='/'><NavLink to=\"/\">Home</NavLink></li>\n            <li key='/leaderboard'><NavLink to=\"/leaderboard\">Leaderboard</NavLink></li>\n\n            <li  key='/login' className={styles.right}><NavLink to=\"login\">Login</NavLink></li>\n            <li key='/register'><NavLink to=\"register\">Register</NavLink></li>\n        </ul>;\n      }\n    }\n\n    render() {\n      return (\n        <HashRouter>\n          <div className={styles.Main}>\n            <header className={styles.header}>\n              <h1><NavLink to=\"/\">Movie Rating Guessing Game</NavLink></h1>\n              {this.renderOnLogin()}\n            </header>\n            <div className={styles.content}>\n              <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/compete\" render={(props) => <Compete {...props} loginStatus={this.state.loggedIn}/>}/>\n                <Route path=\"/login\" render={(props) => <Login {...props} checkLoginStatus={this.checkLoginStatus} loginStatus={this.state.loggedIn}/>}/>\n                <Route path=\"/register\" render={(props) => <Register {...props} loginStatus={this.state.loggedIn}/>}/>\n                <Route path=\"/leaderboard\" component={Leaderboard}/>\n                <Route path=\"*\" component={NotFoundPage} />\n              </Switch>\n            </div>\n          </div>\n        </HashRouter>\n      );\n    }\n}\n\nexport default Main;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./Main\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));"],"sourceRoot":""}